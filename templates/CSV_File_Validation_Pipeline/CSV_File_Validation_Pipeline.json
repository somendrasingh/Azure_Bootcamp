{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"AzureBlobStoragePatientFileSchemaTest": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CSV_File_Validation_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InputMetadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Patient_InputFIle_CSV_Validation",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSetting",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSetting"
							}
						}
					},
					{
						"name": "DefaultMetadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Patient_DefaultSchema",
								"type": "DatasetReference"
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSetting",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSetting"
							}
						}
					},
					{
						"name": "Check Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "id",
							"value": true
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "InputMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DefaultMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://functionappsomendra.azurewebsites.net/api/CsvSchemaValidationHttpTrigger?code=yWUR5ht02QtG0B52alKanjBfkyPRifhcCtfvAIWdORIAdYF2lKaL/g==",
							"method": "POST",
							"body": "@concat('{ \"DefaultSchemaMapping\": ',string(activity('DefaultMetadata').output.structure), ',  \"InputSchemaMapping\": ',string(activity('InputMetadata').output.structure),'}')",
							"linkedServices": [
								{
									"referenceName": "AzureFunctionLinkedService",
									"type": "LinkedServiceReference"
								}
							]
						}
					},
					{
						"name": "SetVariableWithErrorMessage",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "error",
							"value": {
								"value": "@activity('Web1').error.message",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"id": {
						"type": "Boolean",
						"defaultValue": false
					},
					"error": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Patient_InputFIle_CSV_Validation')]",
				"[concat(variables('factoryId'), '/datasets/Patient_DefaultSchema')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Patient_InputFIle_CSV_Validation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStoragePatientFileSchemaTest')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Patient_InputFile.txt",
						"container": "patienttestfile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PatientID",
						"type": "String"
					},
					{
						"name": "PatientName",
						"type": "String"
					},
					{
						"name": "PatientAdmissionDate",
						"type": "String"
					},
					{
						"name": "HospitalID",
						"type": "String"
					},
					{
						"name": "HospitalName",
						"type": "String"
					},
					{
						"name": "HospitalLocation",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Patient_DefaultSchema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStoragePatientFileSchemaTest')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Patient_DefaultSchema.txt",
						"container": "patienttestfile"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}